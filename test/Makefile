# -*- makefile-gmake -*-
#
# test/Makefile
#

TOPSRC := $(abspath ..)
OBJSUFFIX ?= .o
LIBSUFFIX ?= .a

CXX ?= g++
CXXSTD = -std=c++98
CXXFLAGS = -g -Wall -Wextra -DGTEST_LANG_CXX11=0 $(DEFS) -pthread

ifeq ($(COVERAGE),1)
CXXFLAGS += -fprofile-arcs -ftest-coverage -O0
endif

ifeq (,$(findstring $(VERBOSE),true))
Q = @
endif

BZIP2_CPPFLAGS=

ifneq (,$(wildcard $(TOPSRC)/extlib/lib/libbz2$(LIBSUFFIX)))
	BZIP2_CPPFLAGS=-I$(TOPSRC)/extlib/include
	LIBS_bz2=$(TOPSRC)/extlib/lib/libbz2$(LIBSUFFIX)
else
	BZIP2_CPPFLAGS=
	LIBS_bz2=$(shell pkg-config --libs bzip2 || echo -lbz2)
endif

GTEST_DIR=googletest/googletest
GTEST_INCDIR=$(GTEST_DIR)/include
GMOCK_DIR=googletest/googlemock
GMOCK_INCDIR=$(GMOCK_DIR)/include

ONS_SDL_CPPFLAGS=
LIBS_sdl=
LIBS_sdlttf=

ifneq (,$(wildcard $(TOPSRC)/extlib/lib/libSDL$(LIBSUFFIX)))
       ONS_SDL_CPPFLAGS=-I$(TOPSRC)/extlib/include
       LIBS_sdl=$(TOPSRC)/extlib/lib/libSDL$(LIBSUFFIX)
else
       LIBS_sdl=$(shell pkg-config --libs sdl)
endif

ifneq (,$(wildcard $(TOPSRC)/extlib/lib/libSDL_ttf$(LIBSUFFIX)))
       LIBS_sdlttf=$(TOPSRC)/extlib/lib/libSDL_ttf$(LIBSUFFIX)
else
       LIBS_sdlttf=$(shell pkg-config --libs SDL_ttf)
endif

all: test

include Makefile.testlibs

.cpp$(OBJSUFFIX):
	$(CXX) $(CXXSTD) -isystem $(GTEST_INCDIR) -I$(GTEST_DIR) $(CXXFLAGS) -c $< -o $@

.cc$(OBJSUFFIX):
	$(CXX) $(CXXSTD) -isystem $(GTEST_INCDIR) -I$(GTEST_DIR) $(CXXFLAGS) -c $< -o $@

test_%$(EXESUFFIX): test_%.cpp $(TOPSRC)/%.cpp libgtest$(LIBSUFFIX)
	$(Q)$(CXX) $(CXXSTD) -isystem $(GTEST_INCDIR) -I$(TOPSRC) $(CXXFLAGS) $^ -o $@
	./$@

test_Encoding$(EXESUFFIX): test_Encoding.cpp $(TOPSRC)/Encoding.cpp $(TOPSRC)/sjis2utf16.cpp libgtest$(LIBSUFFIX)
	$(Q)$(CXX) $(CXXSTD) -isystem $(GTEST_INCDIR) -I$(TOPSRC) $(CXXFLAGS) $^ -o $@
	./$@

test_BaseReader$(EXESUFFIX): test_BaseReader.cpp libgtest$(LIBSUFFIX)
	$(Q)$(CXX) $(CXXSTD) -isystem $(GTEST_INCDIR) -I$(TOPSRC) $(CXXFLAGS) $^ -o $@
	./$@

test_DirPaths$(EXESUFFIX): test_DirPaths.cpp $(TOPSRC)/DirPaths.cpp libgtest$(LIBSUFFIX)
	$(Q)$(CXX) $(CXXSTD) -isystem $(GTEST_INCDIR) -I$(TOPSRC) $(CXXFLAGS) $^ -o $@
	./$@

test_DirectReader$(EXESUFFIX): test_DirectReader.cpp $(TOPSRC)/DirectReader.cpp libgtest$(LIBSUFFIX) libgmock$(LIBSUFFIX)
	$(Q)$(CXX) $(CXXSTD) -isystem $(GTEST_INCDIR) -isystem $(GMOCK_INCDIR) -I$(TOPSRC) $(CXXFLAGS) $(BZIP2_CPPFLAGS) $^ $(LIBS_bz2) -o $@
	./$@

test_DirtyRect$(EXESUFFIX): test_DirtyRect.cpp $(TOPSRC)/DirtyRect.cpp libgtest$(LIBSUFFIX)
	$(Q)$(CXX) $(CXXSTD) -isystem $(GTEST_INCDIR) -I$(TOPSRC) $(CXXFLAGS) $(ONS_SDL_CPPFLAGS) $^ $(LIBS_sdl) -o $@
	./$@

# TODO needs FontContfig, X11, possibly other libs
test_FontInfo$(EXESUFFIX): test_FontInfo.cpp $(TOPSRC)/FontInfo.cpp libgtest$(LIBSUFFIX)
	$(Q)$(CXX) $(CXXSTD) -isystem $(GTEST_INCDIR) -I$(TOPSRC) $(CXXFLAGS) $(ONS_SDL_CPPFLAGS) $^ $(LIBS_sdlttf) $(LIBS_sdl) -o $@
	./$@

test_ScriptHandler$(EXESUFFIX): test_ScriptHandler.cpp $(TOPSRC)/ScriptHandler.cpp $(TOPSRC)/Encoding.cpp $(TOPSRC)/sjis2utf16.cpp $(TOPSRC)/DirPaths.cpp libgtest$(LIBSUFFIX) libgmock$(LIBSUFFIX)
	$(Q)$(CXX) $(CXXSTD) -isystem $(GTEST_INCDIR) -isystem $(GMOCK_INCDIR) -I$(TOPSRC) $(CXXFLAGS) $(ONS_SDL_CPPFLAGS) $^ -o $@
	./$@

TESTEXE := test_Encoding$(EXESUFFIX) test_BaseReader$(EXESUFFIX) test_DirPaths$(EXESUFFIX) test_DirectReader$(EXESUFFIX) test_DirtyRect$(EXESUFFIX) test_ScriptHandler$(EXESUFFIX) #test_FontInfo$(EXESUFFIX)

test: $(TESTEXE)

#CLEAN_PKG += googletest

clean::
	$(RM) $(CLEAN_OBJ) $(TESTEXE)
	$(RM) -R $(CLEAN_PKG)

#distclean:: clean
#	$(RM) $(DISTCLEAN_PKG)

.PHONY: all clean test $(TESTEXE)

.DELETE_ON_ERROR:
